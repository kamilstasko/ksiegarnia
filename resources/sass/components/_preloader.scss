/**
 * Google Material Design Preloader
 *
 * CSS animated SVG implementation of the Google Material Design preloader
 *
 * Reference: http://goo.gl/ZfulRH
 * License: MIT
 * Author: Rudi Theunissen (rudolf.theunissen$gmail.com)
 * Version: 1.1.1
 */
.mask{
  text-align: center;
  .md-preloader{
    position: relative;
    top: 50%;
    margin-top: -50px;
  }
  z-index:10000;
  position: absolute;
  left: 0;right: 0;top: 0;bottom: 0;
  margin:auto;
}
.md-preloader {
  $easing:      cubic-bezier(.8,.0,.4,.8);

  $speed:      1000ms;       // animation time for each loop
  $color:      $theme;
  $linecap:    square;       // could be 'round', but the official one is square
  $loops:      7;            // number of points where the arc meets
  $arc:        0.72;         // fraction of the circumference that the arc grows to
  $perimeter:  67px * 3.14159265359;  // circumference of the raw svg inner cricle

  // measure to prevent inline block spacing from affecting the outer rotation
  font-size: 0;

  display: inline-block;
  animation: outer $speed * $loops linear infinite;

  svg {
    animation: inner $speed linear infinite;

    circle {
      fill: none;
      stroke: $color;
      stroke-linecap: $linecap;
      animation: arc $speed $easing infinite;
    }
  }

  @keyframes outer {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes inner {
    0% {
      transform: rotate(-360deg * (1 - $arc));
    }
    100% {
      transform: rotate(0);
    }
  }

  @keyframes arc {
    0% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: 0;
    }
    40% {
      stroke-dasharray: $arc * $perimeter, $perimeter;
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: -$arc * $perimeter;
    }
  }
}
